//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by running `build.(cmd|sh) generate-word-lists`
//     Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace UniqueNameGenerator;

public class Colors: IWordList {

    private Colors() { }

    public static readonly Colors WordList = new Colors();

    private readonly static byte[] _buffer = [
		97, 109, 97, 114, 97, 110, 116, 104, // 0: amaranth
		97, 109, 98, 101, 114, // 1: amber
		97, 109, 101, 116, 104, 121, 115, 116, // 2: amethyst
		97, 112, 114, 105, 99, 111, 116, // 3: apricot
		97, 113, 117, 97, // 4: aqua
		97, 113, 117, 97, 109, 97, 114, 105, 110, 101, // 5: aquamarine
		97, 122, 117, 114, 101, // 6: azure
		98, 101, 105, 103, 101, // 7: beige
		98, 108, 97, 99, 107, // 8: black
		98, 108, 117, 101, // 9: blue
		98, 108, 117, 115, 104, // 10: blush
		98, 114, 111, 110, 122, 101, // 11: bronze
		98, 114, 111, 119, 110, // 12: brown
		99, 104, 111, 99, 111, 108, 97, 116, 101, // 13: chocolate
		99, 111, 102, 102, 101, 101, // 14: coffee
		99, 111, 112, 112, 101, 114, // 15: copper
		99, 111, 114, 97, 108, // 16: coral
		99, 114, 105, 109, 115, 111, 110, // 17: crimson
		99, 121, 97, 110, // 18: cyan
		101, 109, 101, 114, 97, 108, 100, // 19: emerald
		102, 117, 99, 104, 115, 105, 97, // 20: fuchsia
		103, 111, 108, 100, // 21: gold
		103, 114, 97, 121, // 22: gray
		103, 114, 101, 101, 110, // 23: green
		104, 97, 114, 108, 101, 113, 117, 105, 110, // 24: harlequin
		105, 110, 100, 105, 103, 111, // 25: indigo
		105, 118, 111, 114, 121, // 26: ivory
		106, 97, 100, 101, // 27: jade
		108, 97, 118, 101, 110, 100, 101, 114, // 28: lavender
		108, 105, 109, 101, // 29: lime
		109, 97, 103, 101, 110, 116, 97, // 30: magenta
		109, 97, 114, 111, 111, 110, // 31: maroon
		109, 111, 99, 99, 97, 115, 105, 110, // 32: moccasin
		111, 108, 105, 118, 101, // 33: olive
		111, 114, 97, 110, 103, 101, // 34: orange
		112, 101, 97, 99, 104, // 35: peach
		112, 105, 110, 107, // 36: pink
		112, 108, 117, 109, // 37: plum
		112, 117, 114, 112, 108, 101, // 38: purple
		114, 101, 100, // 39: red
		114, 111, 115, 101, // 40: rose
		115, 97, 108, 109, 111, 110, // 41: salmon
		115, 97, 112, 112, 104, 105, 114, 101, // 42: sapphire
		115, 99, 97, 114, 108, 101, 116, // 43: scarlet
		115, 105, 108, 118, 101, 114, // 44: silver
		116, 97, 110, // 45: tan
		116, 101, 97, 108, // 46: teal
		116, 111, 109, 97, 116, 111, // 47: tomato
		116, 117, 114, 113, 117, 111, 105, 115, 101, // 48: turquoise
		118, 105, 111, 108, 101, 116, // 49: violet
		119, 104, 105, 116, 101, // 50: white
		121, 101, 108, 108, 111, 119, // 51: yellow
	];

    private readonly static (int Offset, int Length)[] _index = [
		(0, 8), // 0: amaranth
		(8, 5), // 1: amber
		(13, 8), // 2: amethyst
		(21, 7), // 3: apricot
		(28, 4), // 4: aqua
		(32, 10), // 5: aquamarine
		(42, 5), // 6: azure
		(47, 5), // 7: beige
		(52, 5), // 8: black
		(57, 4), // 9: blue
		(61, 5), // 10: blush
		(66, 6), // 11: bronze
		(72, 5), // 12: brown
		(77, 9), // 13: chocolate
		(86, 6), // 14: coffee
		(92, 6), // 15: copper
		(98, 5), // 16: coral
		(103, 7), // 17: crimson
		(110, 4), // 18: cyan
		(114, 7), // 19: emerald
		(121, 7), // 20: fuchsia
		(128, 4), // 21: gold
		(132, 4), // 22: gray
		(136, 5), // 23: green
		(141, 9), // 24: harlequin
		(150, 6), // 25: indigo
		(156, 5), // 26: ivory
		(161, 4), // 27: jade
		(165, 8), // 28: lavender
		(173, 4), // 29: lime
		(177, 7), // 30: magenta
		(184, 6), // 31: maroon
		(190, 8), // 32: moccasin
		(198, 5), // 33: olive
		(203, 6), // 34: orange
		(209, 5), // 35: peach
		(214, 4), // 36: pink
		(218, 4), // 37: plum
		(222, 6), // 38: purple
		(228, 3), // 39: red
		(231, 4), // 40: rose
		(235, 6), // 41: salmon
		(241, 8), // 42: sapphire
		(249, 7), // 43: scarlet
		(256, 6), // 44: silver
		(262, 3), // 45: tan
		(265, 4), // 46: teal
		(269, 6), // 47: tomato
		(275, 9), // 48: turquoise
		(284, 6), // 49: violet
		(290, 5), // 50: white
		(295, 6), // 51: yellow
	];

    public string GetWord(Random random) {
      var (offset, length) = _index[random.Next(0, _index.Length)];
      return System.Text.Encoding.UTF8.GetString(_buffer, offset, length);
    }
};